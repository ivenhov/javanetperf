%!PS-Adobe-2.0 EPSF-2.0
%%Title: average.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Nov 13 14:51:26 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -53 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
912 480 M
6016 0 V
1.000 UL
LTb
912 480 M
63 0 V
5953 0 R
-63 0 V
stroke
816 480 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (10000)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
912 1026 M
4129 0 V
1791 0 R
96 0 V
1.000 UL
LTb
912 1026 M
63 0 V
5953 0 R
-63 0 V
stroke
816 1026 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (15000)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
912 1572 M
6016 0 V
1.000 UL
LTb
912 1572 M
63 0 V
5953 0 R
-63 0 V
stroke
816 1572 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (20000)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
912 2118 M
6016 0 V
1.000 UL
LTb
912 2118 M
63 0 V
5953 0 R
-63 0 V
stroke
816 2118 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (25000)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
912 2664 M
6016 0 V
1.000 UL
LTb
912 2664 M
63 0 V
5953 0 R
-63 0 V
stroke
816 2664 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (30000)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
912 3210 M
6016 0 V
1.000 UL
LTb
912 3210 M
63 0 V
5953 0 R
-63 0 V
stroke
816 3210 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (35000)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
912 3756 M
6016 0 V
1.000 UL
LTb
912 3756 M
63 0 V
5953 0 R
-63 0 V
stroke
816 3756 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (40000)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
912 4302 M
6016 0 V
1.000 UL
LTb
912 4302 M
63 0 V
5953 0 R
-63 0 V
stroke
816 4302 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (45000)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
912 4848 M
6016 0 V
1.000 UL
LTb
912 4848 M
63 0 V
5953 0 R
-63 0 V
stroke
816 4848 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (50000)]
] -53.3 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
912 480 M
0 4368 V
1.000 UL
LTb
912 480 M
0 63 V
0 4305 R
0 -63 V
stroke
912 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (0)]
] -53.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1514 480 M
0 4368 V
1.000 UL
LTb
1514 480 M
0 63 V
0 4305 R
0 -63 V
stroke
1514 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (2)]
] -53.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
2115 480 M
0 4368 V
1.000 UL
LTb
2115 480 M
0 63 V
0 4305 R
0 -63 V
stroke
2115 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (4)]
] -53.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
2717 480 M
0 4368 V
1.000 UL
LTb
2717 480 M
0 63 V
0 4305 R
0 -63 V
stroke
2717 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (6)]
] -53.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
3318 480 M
0 4368 V
1.000 UL
LTb
3318 480 M
0 63 V
0 4305 R
0 -63 V
stroke
3318 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (8)]
] -53.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
3920 480 M
0 4368 V
1.000 UL
LTb
3920 480 M
0 63 V
0 4305 R
0 -63 V
stroke
3920 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (10)]
] -53.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
4522 480 M
0 4368 V
1.000 UL
LTb
4522 480 M
0 63 V
0 4305 R
0 -63 V
stroke
4522 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (12)]
] -53.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
5123 480 M
0 63 V
0 640 R
0 3665 V
1.000 UL
LTb
5123 480 M
0 63 V
0 4305 R
0 -63 V
stroke
5123 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (14)]
] -53.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
5725 480 M
0 63 V
0 640 R
0 3665 V
1.000 UL
LTb
5725 480 M
0 63 V
0 4305 R
0 -63 V
stroke
5725 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (16)]
] -53.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
6326 480 M
0 63 V
0 640 R
0 3665 V
1.000 UL
LTb
6326 480 M
0 63 V
0 4305 R
0 -63 V
stroke
6326 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (18)]
] -53.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
6928 480 M
0 4368 V
1.000 UL
LTb
6928 480 M
0 63 V
0 4305 R
0 -63 V
stroke
6928 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (20)]
] -53.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
912 480 M
6016 0 V
0 4368 V
-6016 0 V
912 480 L
LTb
160 2664 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 160.0 0.0 true true 0 (Messages/s)]
] -53.3 MCshow
grestore
grestore
LTb
3920 80 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (Simultaneous Clients)]
] -53.3 MCshow
grestore
1.000 UP
4.000 UL
LT0
LTb
6193 1103 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (c++-epoll)]
] -53.3 MRshow
grestore
LT0
6289 1103 M
447 0 V
1213 2905 M
301 746 V
300 608 V
301 -119 V
301 308 V
301 -95 V
601 97 V
602 -106 V
602 59 V
601 71 V
602 -11 V
601 -14 V
602 83 V
0.000 UP
1.000 UL
LT0
1213 2310 M
0 1191 V
1182 2310 M
62 0 V
-62 1191 R
62 0 V
270 -333 R
0 966 V
-31 -966 R
62 0 V
-62 966 R
62 0 V
269 -229 R
0 708 V
-31 -708 R
62 0 V
-62 708 R
62 0 V
270 -653 R
0 360 V
-31 -360 R
62 0 V
-62 360 R
62 0 V
270 -141 R
0 537 V
-31 -537 R
62 0 V
-62 537 R
62 0 V
270 -590 R
0 454 V
-31 -454 R
62 0 V
-62 454 R
62 0 V
570 -346 R
0 432 V
-31 -432 R
62 0 V
-62 432 R
62 0 V
571 -572 R
0 501 V
-31 -501 R
62 0 V
-62 501 R
62 0 V
571 -441 R
0 498 V
-31 -498 R
62 0 V
-62 498 R
62 0 V
570 -507 R
0 659 V
-31 -659 R
62 0 V
-62 659 R
62 0 V
571 -531 R
0 381 V
-31 -381 R
62 0 V
-62 381 R
62 0 V
570 -490 R
0 570 V
-31 -570 R
62 0 V
-62 570 R
62 0 V
571 -399 R
0 393 V
-31 -393 R
62 0 V
-62 393 R
62 0 V
1213 2905 Pls
1514 3651 Pls
1814 4259 Pls
2115 4140 Pls
2416 4448 Pls
2717 4353 Pls
3318 4450 Pls
3920 4344 Pls
4522 4403 Pls
5123 4474 Pls
5725 4463 Pls
6326 4449 Pls
6928 4532 Pls
4.000 UL
LT1
LTb
6193 943 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (c++-threads)]
] -53.3 MRshow
grestore
LT1
6289 943 M
447 0 V
1213 1468 M
301 1485 V
300 156 V
301 631 V
301 10 V
301 -240 V
601 -60 V
602 297 V
602 -198 V
601 73 V
602 -176 V
601 80 V
602 48 V
0.000 UP
1.000 UL
LT1
1213 937 M
0 1062 V
1182 937 M
62 0 V
-62 1062 R
62 0 V
270 519 R
0 870 V
-31 -870 R
62 0 V
-62 870 R
62 0 V
269 -786 R
0 1014 V
1783 2602 M
62 0 V
-62 1014 R
62 0 V
270 -194 R
0 636 V
-31 -636 R
62 0 V
-62 636 R
62 0 V
270 -767 R
0 918 V
-31 -918 R
62 0 V
-62 918 R
62 0 V
2717 3181 M
0 658 V
-31 -658 R
62 0 V
-62 658 R
62 0 V
570 -657 R
0 535 V
-31 -535 R
62 0 V
-62 535 R
62 0 V
571 -243 R
0 546 V
-31 -546 R
62 0 V
-62 546 R
62 0 V
571 -648 R
0 353 V
-31 -353 R
62 0 V
-62 353 R
62 0 V
570 -270 R
0 334 V
-31 -334 R
62 0 V
-62 334 R
62 0 V
571 -518 R
0 350 V
-31 -350 R
62 0 V
-62 350 R
62 0 V
570 -249 R
0 308 V
-31 -308 R
62 0 V
-62 308 R
62 0 V
571 -201 R
0 189 V
-31 -189 R
62 0 V
-62 189 R
62 0 V
1213 1468 Crs
1514 2953 Crs
1814 3109 Crs
2115 3740 Crs
2416 3750 Crs
2717 3510 Crs
3318 3450 Crs
3920 3747 Crs
4522 3549 Crs
5123 3622 Crs
5725 3446 Crs
6326 3526 Crs
6928 3574 Crs
4.000 UL
LT2
LTb
6193 783 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (java-epoll)]
] -53.3 MRshow
grestore
LT2
6289 783 M
447 0 V
1213 2136 M
301 1157 V
300 337 V
301 5 V
301 248 V
301 -103 V
601 352 V
602 -45 V
602 -155 V
601 -204 V
602 150 V
601 -154 V
602 175 V
0.000 UP
1.000 UL
LT2
1213 1696 M
0 880 V
-31 -880 R
62 0 V
-62 880 R
62 0 V
270 445 R
0 543 V
-31 -543 R
62 0 V
-62 543 R
62 0 V
269 -208 R
0 548 V
-31 -548 R
62 0 V
-62 548 R
62 0 V
270 -484 R
0 431 V
-31 -431 R
62 0 V
-62 431 R
62 0 V
270 -180 R
0 424 V
-31 -424 R
62 0 V
-62 424 R
62 0 V
270 -536 R
0 441 V
-31 -441 R
62 0 V
-62 441 R
62 0 V
570 -158 R
0 579 V
-31 -579 R
62 0 V
-62 579 R
62 0 V
571 -497 R
0 327 V
-31 -327 R
62 0 V
-62 327 R
62 0 V
571 -567 R
0 497 V
-31 -497 R
62 0 V
-62 497 R
62 0 V
570 -564 R
0 221 V
-31 -221 R
62 0 V
-62 221 R
62 0 V
571 -98 R
0 276 V
-31 -276 R
62 0 V
-62 276 R
62 0 V
570 -425 R
0 267 V
-31 -267 R
62 0 V
-62 267 R
62 0 V
571 -148 R
0 379 V
-31 -379 R
62 0 V
-62 379 R
62 0 V
1213 2136 Star
1514 3293 Star
1814 3630 Star
2115 3635 Star
2416 3883 Star
2717 3780 Star
3318 4132 Star
3920 4087 Star
4522 3932 Star
5123 3728 Star
5725 3878 Star
6326 3724 Star
6928 3899 Star
4.000 UL
LT3
LTb
6193 623 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (java-threads)]
] -53.3 MRshow
grestore
LT3
6289 623 M
447 0 V
1213 2134 M
301 1622 V
300 -891 V
301 227 V
301 203 V
301 -188 V
601 152 V
602 -107 V
602 218 V
601 -134 V
602 -93 V
601 65 V
602 -17 V
0.000 UP
1.000 UL
LT3
1213 1608 M
0 1051 V
1182 1608 M
62 0 V
-62 1051 R
62 0 V
270 689 R
0 815 V
-31 -815 R
62 0 V
-62 815 R
62 0 V
1814 2574 M
0 581 V
-31 -581 R
62 0 V
-62 581 R
62 0 V
270 -485 R
0 844 V
-31 -844 R
62 0 V
-62 844 R
62 0 V
270 -618 R
0 799 V
-31 -799 R
62 0 V
-62 799 R
62 0 V
270 -819 R
0 463 V
-31 -463 R
62 0 V
-62 463 R
62 0 V
570 -248 R
0 336 V
-31 -336 R
62 0 V
-62 336 R
62 0 V
571 -442 R
0 333 V
-31 -333 R
62 0 V
-62 333 R
62 0 V
571 -78 R
0 261 V
-31 -261 R
62 0 V
-62 261 R
62 0 V
570 -409 R
0 287 V
-31 -287 R
62 0 V
-62 287 R
62 0 V
571 -335 R
0 198 V
-31 -198 R
62 0 V
-62 198 R
62 0 V
570 -141 R
0 214 V
-31 -214 R
62 0 V
-62 214 R
62 0 V
571 -214 R
0 180 V
-31 -180 R
62 0 V
-62 180 R
62 0 V
1213 2134 Box
1514 3756 Box
1814 2865 Box
2115 3092 Box
2416 3295 Box
2717 3107 Box
3318 3259 Box
3920 3152 Box
4522 3370 Box
5123 3236 Box
5725 3143 Box
6326 3208 Box
6928 3191 Box
1.000 UL
LTb
912 480 M
6016 0 V
0 4368 V
-6016 0 V
912 480 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
